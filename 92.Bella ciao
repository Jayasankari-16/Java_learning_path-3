/* Chef is planning a heist in the reserve bank of Chefland. They are planning to hijack the bank for 
D days and print the money.
The initial rate of printing the currency is P dollars per day and they increase the production by Q dollars after every interval of d days.
For example, after d days the rate is P+Q dollars per day, and after 2d days the rate is P+2Q dollars per day, and so on. 
Output the amount of money they will be able to print in the given period.*/

import java.util.*;
import java.lang.*;
import java.io.*;

class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(br.readLine());
		while(t-->0)
		{
		    String[] inputs = br.readLine().split(" ");
            long D = Long.parseLong(inputs[0]);
            long d = Long.parseLong(inputs[1]);
            long p = Long.parseLong(inputs[2]);
            long Q = Long.parseLong(inputs[3]);
		        long terms = D/d; // no of terms
		        long f = d*(p); // money produce in first interval
		        long l = d*(p+((terms-1)*Q)); // money produce in last interval
		        long sum = (terms*(f+l))/2;
		        long rem = D%d; // it comes zero if completely divisible
		        long sup = rem*(p+(terms*Q));// it automately zero if the D is completely divislbe
		        System.out.println(sup + sum);
		}

	}
}
