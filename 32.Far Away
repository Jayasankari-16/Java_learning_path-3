/* Chef has an array A of size N and an integer M, such that 1≤A i​≤M for every 1≤i≤N.
The distance of an array B from array A is defined as:d(A,B)= i=1∑N​ ∣A i −B∣ Chef wants an array B of size N, such that 1≤B i​ ≤M and the value d(A,B) is as large as possible,
i.e, the distance of B from A is maximum.
Find the maximum distance for any valid array B.*/

import java.util.*;
import java.lang.*;
import java.io.*;

class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
		Scanner sc=new Scanner(System.in);
		int t=sc.nextInt();
		while(t-->0){
		    int x=sc.nextInt();
		    int y=sc.nextInt();
		    long total=0;
		    for(int i=0;i<x;i++){
		        int a=sc.nextInt();
		        if(a<=y/2){
		            total+=Math.abs(y-a);
		        }
		        else{
		            total+=Math.abs(a-1);
		        }
		    }
		    System.out.println(total);
		}
	}
}
