/* Chef considers a permutation P of {1,2,3,…,N} End Sorted if and only if P1​ =1 and PN=NChef is given a permutation P.
In one operation Chef can choose any index i (1≤i≤N−1) and swap Pi​  and Pi+1​. 
Determine the minimum number of operations required by Chef to make the permutation P End Sorted.*/

import java.util.*;
import java.lang.*;
import java.io.*;

class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
		try(Scanner sc=new Scanner(System.in)){
		int t=sc.nextInt();
		
		while(t-- > 0){
		    int n=sc.nextInt();
		    int[]a=new int[n];
		    for(int i=0;i<n;++i)
		        a[i]=sc.nextInt();
		        
		        int p1=0;
		        int p2=0;
		        
		        while(a[p1++] !=1);
		        while(a[p2++] !=n);
		        
		        int moves=p1+(n-1-p2);
		        if(p1>p2)
		            --moves;
		            System.out.println(moves);
		    }
		}
	}
}
