/* You are given a binary string S of length N. 
You are allowed to perform the following types of operations on string S:Delete any one character from S, and concatenate the remaining parts of the string.
For example, if we delete the third character of S=1101, it becomes S=111.
Flip all the characters of S. For example, if we flip all character of S=1101, it becomes S=0010.
Given that you can use either type of operation any number of times, find the minimum number of operations required to make all characters of the string S equal to 0.*/

import java.util.*;
import java.lang.*;
import java.io.*;

class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
		Scanner sc= new Scanner(System.in);
		int t=sc.nextInt();
		while(t-->0){
		    int l=sc.nextInt();
		    String binaryNum = sc.next();
		    int zeros=0;
		    int ones=0;
		    
		    for(int i=0;i<l;i++){
		        if(binaryNum.charAt(i)=='1')
		            ++ones;
		        else
		            ++zeros;
		    }  
		        if(ones>zeros){
		            System.out.println(1 + zeros);
		        }
		        else{
		            System.out.println(ones);
		        }
		}
	}
}
